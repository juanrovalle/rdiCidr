name: CI-CD Actions
on:
  push:
    branches: [prod, stage, devel]
  pull_request:
    types: [opened, synchronize]
jobs:
  CI-CD:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 14
      - run: npm ci
      - run: npm run lint
      - run: npm run prettier

      - name: Run test
        run: npm run test
      - name: Run build
        run: npm run build

      - name: Aws Connection
        if: ${{github.event_name == 'push'}}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1

      - name: configure terraform
        if: ${{github.event_name == 'push'}}
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
      - name: Terraform
        if: ${{github.event_name == 'push'}}
        run: terrafom init
      - name: Terraform
        if: ${{github.event_name == 'push'}}
        run: terrafom plan
      - name: terrafom apply
        if: ${{github.ref == 'refs/heads/prod' && github.event_name == 'push'}}
        run: terraform apply

      - name: terrafom apply stage
        if: ${{github.ref == 'refs/head/stage' && github.event_name== 'push'}}
        run: terraform apply -var-file="enviroments/stage.tfvars"

      - name: terrafom apply
        if: ${{github.ref == 'refs/head/devel' && github.event_name== 'push'}}
        run: terraform apply -var-file="enviroments/devel.tfvars"
